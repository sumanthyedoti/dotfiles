* First Heading
** String format
	- *bold*
	- _underline_
	- /italic/
	[[https://example.com][- link]]
		- to open a link, `C-x C-f`
** Sub-heading
		lorem ipsum
* Second heading
	lorem ipsum
** list
*** unordered list
SCHEDULED: <2023-04-26 Wed>
	- 2nd
		content
		sdfjsdf
	- 1st
	- sdfsdfj
*** order list
DEADLINE: <2023-04-26 Wed>
	1. jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf jhfksjflsjf
		 sdjsd
		 sdfkjsdhf
	2. fskdfjsdfj
	3. sdfsdjf
		 jsdflsjf
	4. sdfjlsdjf
	5. sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj sdflsjflsdfj
*** list with checkbox
	- [ ] check/uncheck with `C-c C-x C-b`
	- [ ] list item
		lorem ipsum
	1. [ ] list item
		 lorem ipsum
	2. [X] lksjdflskdjf
	3. [ ] sjdfsdfj

** table
	| Name             | Age                   |
	|------------------+-----------------------|
	| Sumanth          | 25                    |
	| sdfhkshfsdfkjhsd | sdfjshf               |
	| sdhjfksdfh       | skjkdfhsdf            |
	| sdhfksdjfhk      | sdfjh                 |
	| skdjhfsrdk       | sdfjhksdfhksjdfhksjhf |

* Src blocks
#+begin_src emacs-lisp
	(defun greet ()
		(message "Hello!"))
#+end_src

* TODO Section to do
	- change to-do state of the parent section -> `C-c C-t`
	- Can also use `Shfit + <- / ->` on the section title to change to todo state
	- Use the above shortcut on list changes the bullet style
** TODO Sub-section
	- Change to-do state of the sub-section
*** Another
	- and here
**** One more

* NEXT Schedule
DEADLINE: <2023-04-27 Thu>
:LOGBOOK:
- State "DONE"       from "NEXT"       [2023-04-25 Tue 23:58]
- State "DONE"       from "NEXT"       [2023-04-25 Tue 23:58]
- State "DONE"       from "NEXT"       [2023-04-25 Tue 23:58]
- State "DONE"       from "NEXT"       [2023-04-25 Tue 23:58]
- State "DONE"       from "NEXT"       [2023-04-25 Tue 23:58]
- State "DONE"       from "NEXT"       [2023-04-25 Tue 23:58]
- State "DONE"       from "NEXT"       [2023-04-25 Tue 23:57]
:END:
	- Let org-mode know the agenda files with `org-agenda-files`
	- Schedule -- `M-x org-schedule` / `C-c C-s`
	- Deadline - `M-x org-deadline` / `C-c C-d`
		- can set warning days offset to show up in agenda, with `org-deadline-warning-days` variable
	- Check agenda - `M-x org-agenda`
*** Repeated tasked
		 - every year - <2010-04-27 Thu +1y>
		- [[https://orgmode.org/manual/Repeated-tasks.html][Documentation]]

* Babel
**** Tangle
- configure the tangle of the block to a file by adding `:tangle _filename_`
- tangle the block by running `org-babel-tangle`
#+begin_src emacs-lisp :tangle ./tangle.el
(message "Tangled")
#+end_src
**** Configure and tagle all the blocks in an org file
- by putting the `+PROPERTY` at top of the file
#+begin_src
	+PROPERTY: header-args:emacs-lisp :tangle ./tangle.el
#+end_src
